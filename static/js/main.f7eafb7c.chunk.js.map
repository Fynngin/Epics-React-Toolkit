{"version":3,"sources":["api/api.ts","Login/Login.tsx","Home/SpinnerOddsTable.tsx","Home/SpinnerOddsChart.tsx","Home/SpinnerOdds.tsx","Home/StorePack.tsx","Home/StorePackDisplay.tsx","Home/PackStock.tsx","Navigation/Navbar.tsx","Home/Home.tsx","AccountTransfer/AccountTransfer.tsx","App.tsx","reportWebVitals.ts","theme.ts","index.tsx"],"names":["http","axiosRateLimit","axios","create","maxRequests","perMilliseconds","login","credentials","a","method","data","response","status","getStorePacks","jwt","categoryId","packs","page","headers","params","length","el","pack","push","getSpinner","Login","useState","email","password","creds","setCreds","hideLoginInfo","toggleLoginInfo","loading","setLoading","history","useHistory","location","useLocation","auth","useAuth","event","preventDefault","user","from","state","pathname","signin","replace","className","Box","sx","border","borderRadius","borderColor","p","width","onSubmit","TextField","id","label","type","autoComplete","fullWidth","onChange","e","target","value","required","Button","variant","size","disabled","CircularProgress","color","ml","Link","onClick","hidden","rel","href","SpinnerOddsTable","spinner","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","items","map","item","name","chance","SpinnerOddsChart","spinnerOdds","setSpinnerOdds","useEffect","odds","options","chart","stacked","foreColor","background","theme","mode","plotOptions","bar","horizontal","stroke","colors","xaxis","categories","labels","formatter","val","max","yaxis","title","text","undefined","tooltip","y","fill","opacity","legend","position","horizontalAlign","noData","grid","show","height","series","ExpandMore","styled","props","expand","other","IconButton","transform","marginLeft","transition","transitions","duration","shortest","sortSpinnerOddsByChance","sort","b","SpinnerOdds","setSpinner","expandSpinnerOddsTable","setExpandSpinnerOddsTable","initSpinnerOdds","Card","CardHeader","avatar","Redeem","CardContent","CardActions","disableSpacing","cursor","style","fontSize","Collapse","in","timeout","unmountOnExit","getPackImage","primaryImage","images","find","img","url","StorePack","Avatar","src","acquireType","Typography","CardMedia","component","image","alt","textAlign","inventoryCount","StorePackDisplay","Grid","container","spacing","justifyContent","padding","filterActivePacks","today","Date","filter","purchaseEnd","sortPacksByInventoryCount","PackStock","setPacks","mounted","storePacks","activePacks","sortedPacks","initStorePacks","MonetizationOn","Navbar","isActiveRoute","routeName","routes","icon","Home","isActive","path","Search","Sell","SportsEsports","Group","CompareArrows","Restaurant","handleNavButtonClick","route","menuAnchor","setMenuAnchor","openMenu","Boolean","AppBar","Toolbar","flexGrow","evt","currentTarget","Menu","anchorEl","open","onClose","MenuItem","xs","lg","sm","AccountTransfer","authContext","createContext","signout","ProvideAuth","children","setUser","useProvideAuth","Provider","useContext","PrivateRoute","rest","render","to","App","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createTheme","palette","primary","main","secondary","ReactDOM","StrictMode","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.f7eafb7c.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport axiosRateLimit from \"axios-rate-limit\";\r\nimport { UserCredentials } from \"../interfaces/UserCredentials\";\r\nimport { Pack } from \"../interfaces/Pack\";\r\nimport { Spinner } from \"../interfaces/Spinner\";\r\nimport { User } from \"../interfaces/User\";\r\n\r\nconst http = axiosRateLimit(axios.create(), {maxRequests: 130, perMilliseconds: 60000})\r\n\r\nexport async function login(credentials: UserCredentials): Promise<User> {\r\n    const response: any = await http('https://api.epics.gg/api/v1/auth/login', {\r\n        method: 'POST',\r\n        data: credentials\r\n    })\r\n\r\n    if (response.status === 200) \r\n        return response.data.data as User;\r\n    \r\n    return {} as User;\r\n}\r\n\r\nexport async function getStorePacks(jwt: string, categoryId: number): Promise<Pack[]> {\r\n    let packs: Pack[] = [];\r\n    let page = 1;\r\n    while (true) {\r\n        const response: any = await http('https://api.epics.gg/api/v1/packs', {\r\n            method: 'GET',\r\n            headers: {\r\n                'x-user-jwt': jwt\r\n            },\r\n            params: {\r\n                'categoryId': categoryId,\r\n                'page': page\r\n            }\r\n        })\r\n        page += 1;\r\n\r\n        if (response.status !== 200)\r\n            break;\r\n        \r\n        if (response.data.data.length === 0)\r\n            break;\r\n        \r\n        for (const el of response.data.data) {\r\n            const pack = el as Pack;\r\n            packs.push(pack);\r\n        }\r\n    }\r\n    return packs;\r\n}\r\n\r\nexport async function getSpinner(jwt: string, categoryId: number): Promise<Spinner> {\r\n    const response: any = await http('https://api.epics.gg/api/v1/spinner', {\r\n        method: 'GET',\r\n        headers: {\r\n            'x-user-jwt': jwt\r\n        },\r\n        params: {\r\n            'categoryId': categoryId\r\n        }\r\n    });\r\n\r\n    if (response.status !== 200)\r\n        return {} as Spinner;\r\n    \r\n    return response.data.data as Spinner;\r\n}\r\n","import { Button, TextField, Link, CircularProgress } from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\nimport { useState } from \"react\"\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport { login } from \"../api/api\";\r\nimport { useAuth } from '../App';\r\nimport { User } from \"../interfaces/User\";\r\n\r\nexport default function Login() {\r\n    const [creds, setCreds] = useState({email: '', password: ''});\r\n    const [hideLoginInfo, toggleLoginInfo] = useState(true);\r\n    const [loading, setLoading] = useState(false);\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n    const auth = useAuth();\r\n\r\n    async function handleLogin(event: React.FormEvent) {\r\n        event.preventDefault();\r\n        setLoading(true);\r\n        const user: User = await login(creds);\r\n        if (user.jwt) {\r\n            const from: any = location.state || { from: { pathname: '/' } };\r\n            auth.signin(user);\r\n            history.replace(from);\r\n            history.push('/');\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className='flex flex-col items-center justify-center py-12 px-12 max-w-xl m-auto'>\r\n            <h1 className='mb-2 text-xl text-center'>\r\n                Welcome to Epics Toolkit v2\r\n            </h1>\r\n            <Box sx={{border: 2, borderRadius: 2, borderColor: 'primary.main', p: 4, width: '100%'}}>\r\n                <form className='space-y-4 mb-4' onSubmit={handleLogin}>\r\n                    <div>\r\n                        <TextField \r\n                            id='email' \r\n                            label='E-Mail'\r\n                            type='email'\r\n                            autoComplete='email'\r\n                            fullWidth\r\n                            onChange={e => setCreds({...creds, email: e.target.value})}\r\n                            value={creds.email}\r\n                            required\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <TextField \r\n                            id='password' \r\n                            label='Password'\r\n                            type='password' \r\n                            autoComplete='current-password' \r\n                            fullWidth\r\n                            onChange={e => setCreds({...creds, password: e.target.value})}\r\n                            value={creds.password}\r\n                            required\r\n                        />\r\n                    </div>\r\n                    <div className='mt-6'>\r\n                        <Button type='submit' variant='contained' size='small' disabled={loading}>\r\n                            Log In\r\n                            {loading && (\r\n                                <CircularProgress color='primary' size={12} sx={{ml: 2}}/>\r\n                            )}\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n                <div className='text-center'>\r\n                    <Link onClick={() => toggleLoginInfo(!hideLoginInfo)}>Why is this needed?</Link>\r\n                    <p hidden={hideLoginInfo}>\r\n                        Your login is needed to send requests to the Epics API.\r\n                        Your login credentials will never be saved!\r\n                        All my code can be found on my&nbsp;\r\n                        <Link target=\"_blank\" rel=\"noopener noreferrer\"  href=\"https://github.com/Fynngin/Epics-React-Toolkit\">GitHub</Link>\r\n                        , if you want to verify yourself.\r\n                    </p>\r\n                </div>\r\n            </Box>\r\n        </div>\r\n    )\r\n}","import { Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from \"@mui/material\";\r\nimport { Spinner } from \"../interfaces/Spinner\";\r\n\r\nexport default function SpinnerOddsTable({spinner}: {spinner: Spinner}) {\r\n    return(\r\n        <TableContainer>\r\n            <Table>\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>Item</TableCell>\r\n                        <TableCell>Chance</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {spinner.items.map(item => (\r\n                        <TableRow key={item.id}>\r\n                            <TableCell>{item.name}</TableCell>\r\n                            <TableCell>{item.chance}</TableCell>\r\n                        </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n    )\r\n}","import { useEffect, useState } from \"react\";\r\nimport ReactApexChart from \"react-apexcharts\";\r\nimport { Spinner } from \"../interfaces/Spinner\";\r\n\r\ninterface ItemChance {\r\n    name: string\r\n    data: number[]\r\n}\r\n\r\nexport default function SpinnerOddsChart({ spinner }: {spinner: Spinner}) {\r\n    const [spinnerOdds, setSpinnerOdds] = useState<ItemChance[]>([]);\r\n\r\n    useEffect(() => {\r\n        if (spinner.items) {\r\n            const odds: ItemChance[] = spinner.items.map(item => {\r\n                return {name: item.name, data: [item.chance]} as ItemChance;\r\n            })\r\n            setSpinnerOdds(odds);\r\n        }\r\n    }, [spinner])\r\n\r\n    const options: any = {\r\n        chart: {\r\n            type: 'bar',\r\n            stacked: true,\r\n            foreColor: '#fff',\r\n            background: 'transparent',\r\n        },\r\n        theme: {\r\n            mode: 'dark'\r\n        },\r\n        plotOptions: {\r\n            bar: {\r\n                horizontal: true,\r\n            },\r\n        },\r\n        stroke: {\r\n            width: 1,\r\n            colors: ['#fff']\r\n        },\r\n        xaxis: {\r\n            categories: [''],\r\n            labels: {\r\n                formatter: (val: any) => {\r\n                    return val + \"%\"\r\n                }\r\n            },\r\n            max: 100\r\n        },\r\n        yaxis: {\r\n            title: {\r\n                text: undefined\r\n            }\r\n        },\r\n        tooltip: {\r\n            theme: 'dark',\r\n            y: {\r\n                formatter: (val: any) => {\r\n                    return val + \"%\"\r\n                }\r\n            }\r\n        },\r\n        fill: {\r\n            opacity: 1\r\n        },\r\n        legend: {\r\n            position: 'top',\r\n            horizontalAlign: 'left'\r\n        },\r\n        noData: {\r\n            text: 'Spinner unavailable.'\r\n        },\r\n        grid: {\r\n            show: false\r\n        }\r\n    }\r\n\r\n    return(\r\n        <ReactApexChart height='100%' options={options} type='bar' series={spinnerOdds} />\r\n    )\r\n}","import SpinnerOddsTable from \"./SpinnerOddsTable\";\r\nimport SpinnerOddsChart from \"./SpinnerOddsChart\";\r\nimport { Card, CardActions, CardContent, CardHeader, Collapse, IconButton } from \"@mui/material\";\r\nimport { ExpandMore as ExpandMoreIcon, Redeem } from \"@mui/icons-material\";\r\nimport { styled } from '@mui/material/styles';\r\nimport { useAuth } from \"../App\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Spinner } from \"../interfaces/Spinner\";\r\nimport { getSpinner } from \"../api/api\";\r\nimport { SpinnerItem } from \"../interfaces/SpinnerItem\";\r\n\r\nconst ExpandMore = styled((props: {expand: boolean}) => {\r\n  const { expand: boolean, ...other } = props;\r\n  return <IconButton {...other} />;\r\n    })(({ theme, expand }) => ({\r\n    transform: !expand ? 'rotate(0deg)' : 'rotate(180deg)',\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n        duration: theme.transitions.duration.shortest,\r\n    }),\r\n}));\r\n\r\nfunction sortSpinnerOddsByChance(spinner: Spinner) {\r\n    return spinner.items.sort((a: SpinnerItem, b: SpinnerItem) => b.chance - a.chance);\r\n}\r\n\r\nexport default function SpinnerOdds() {\r\n    const auth = useAuth();\r\n    const [spinner, setSpinner] = useState({} as Spinner);\r\n    const [expandSpinnerOddsTable, setExpandSpinnerOddsTable] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const initSpinnerOdds = async () => {\r\n            let spinnerOdds = await getSpinner(auth.user.jwt, 1);\r\n            spinnerOdds.items = sortSpinnerOddsByChance(spinnerOdds);\r\n            setSpinner(spinnerOdds);\r\n        }\r\n\r\n        initSpinnerOdds();\r\n    }, [auth]);\r\n\r\n    return(\r\n        <Card>\r\n            <CardHeader title='Spinner Odds' avatar={<Redeem/>}/>\r\n            <CardContent>\r\n                <div className='h-60'>\r\n                    <SpinnerOddsChart spinner={spinner}/>\r\n                </div>\r\n            </CardContent>\r\n            <CardActions \r\n                disableSpacing\r\n                onClick={() => setExpandSpinnerOddsTable(!expandSpinnerOddsTable)}\r\n                sx={{cursor: 'pointer'}}\r\n            >\r\n                <p style={{fontSize: '14px', marginLeft: 'auto'}}>\r\n                    {expandSpinnerOddsTable ? 'Hide' : 'Show'} Details\r\n                </p>\r\n                <ExpandMore\r\n                    expand={expandSpinnerOddsTable}\r\n                    aria-expanded={expandSpinnerOddsTable}\r\n                    aria-label=\"show more\"\r\n                >\r\n                    <ExpandMoreIcon />\r\n                </ExpandMore>\r\n            </CardActions>\r\n            <Collapse in={expandSpinnerOddsTable} timeout=\"auto\" unmountOnExit>\r\n                <CardContent>\r\n                    <SpinnerOddsTable spinner={spinner} />\r\n                </CardContent>\r\n            </Collapse>\r\n        </Card> \r\n    )\r\n}","import { Avatar, Card, CardHeader, CardMedia, Typography } from \"@mui/material\";\r\nimport { Pack } from \"../interfaces/Pack\"\r\n\r\nfunction getPackImage(pack: Pack): string {\r\n    const primaryImage = pack.images.find(img => img.name === 'image');\r\n    if (primaryImage)\r\n        return primaryImage.url;\r\n    return pack.images[0].url;\r\n}\r\n\r\nexport default function StorePack({ pack }: { pack: Pack }) {\r\n    return(\r\n        <Card variant='outlined' sx={{width: '10em', height: '100%'}}>\r\n            <CardHeader \r\n                sx={{ height: '4em' }}\r\n                avatar={\r\n                    <Avatar variant='square' src={`packTypeIcons/${pack.acquireType[0]}.svg`}/>\r\n                }\r\n                title={\r\n                    <Typography variant=\"body1\" sx={{opacity: 1, fontSize: 12 }}>\r\n                        {pack.name}\r\n                    </Typography>\r\n                }\r\n            />\r\n            <CardMedia\r\n                sx={{ p: 2 }}\r\n                component='img'\r\n                height='140'\r\n                image={`https://cdn.epics.gg${getPackImage(pack)}`}\r\n                alt='No pack preview found'\r\n            />\r\n            <Typography variant=\"body2\" sx={{ p: 2, textAlign: 'center' }}>\r\n                Stock: {pack.inventoryCount}\r\n            </Typography>\r\n        </Card>\r\n    )\r\n}","import { Grid } from \"@mui/material\";\r\nimport { Pack } from \"../interfaces/Pack\";\r\nimport StorePack from \"./StorePack\";\r\n\r\n\r\nexport default function StorePackDisplay({ packs }: {packs: Pack[]}) {\r\n    return(\r\n        <Grid container spacing={1} justifyContent='center' padding={2}>\r\n            {packs.map(pack => (\r\n                <Grid item key={pack.id}> \r\n                    <StorePack pack={pack}/>\r\n                </Grid>\r\n            ))}\r\n        </Grid>\r\n    )\r\n}","import { MonetizationOn } from \"@mui/icons-material\";\r\nimport { Card, CardHeader, CardContent } from \"@mui/material\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { getStorePacks } from \"../api/api\";\r\nimport { useAuth } from \"../App\";\r\nimport { Pack } from \"../interfaces/Pack\";\r\nimport StorePackDisplay from \"./StorePackDisplay\";\r\n\r\nfunction filterActivePacks(packs: Pack[]) {\r\n    const today = new Date();\r\n    return packs.filter(pack => {\r\n        if (pack.purchaseEnd !== undefined) {\r\n            if (new Date(pack.purchaseEnd) > today && pack.inventoryCount > 0)\r\n                return true;\r\n        }\r\n        return false;\r\n    })\r\n}\r\n\r\nfunction sortPacksByInventoryCount(packs: Pack[]) {\r\n    return packs.sort((a: Pack, b: Pack) => b.inventoryCount - a.inventoryCount)\r\n}\r\n\r\nexport default function PackStock() {\r\n    const auth = useAuth();\r\n    const [packs, setPacks] = useState([] as Pack[]);\r\n\r\n    useEffect(() => {\r\n        let mounted = true;\r\n\r\n        const initStorePacks = async () => {\r\n            const storePacks = await getStorePacks(auth.user.jwt, 1);\r\n            const activePacks = filterActivePacks(storePacks);\r\n            const sortedPacks = sortPacksByInventoryCount(activePacks);\r\n            if (mounted)\r\n                setPacks(sortedPacks);\r\n        }\r\n\r\n        initStorePacks();\r\n\r\n        return () => {\r\n            mounted = false;\r\n        }\r\n    }, [auth]);\r\n\r\n    return(\r\n        <Card>\r\n            <CardHeader title='Store Packs' avatar={<MonetizationOn/>}/>\r\n            <CardContent>\r\n                <StorePackDisplay packs={packs}/>\r\n            </CardContent>\r\n        </Card>\r\n    )\r\n}","import { CompareArrows, Group, Home, Menu as MenuIcon, Restaurant, Search, Sell, SportsEsports } from \"@mui/icons-material\";\r\nimport { AppBar, Button, Grid, IconButton, Menu, MenuItem, Toolbar, Typography } from \"@mui/material\";\r\nimport { MouseEvent, useState } from \"react\";\r\nimport { BrowserView, MobileView } from \"react-device-detect\";\r\nimport { useHistory } from \"react-router\";\r\n\r\ninterface Route {\r\n    name: string\r\n    icon: JSX.Element\r\n    isActive: boolean\r\n    path: string\r\n    disabled: boolean\r\n}\r\n\r\n\r\nexport default function Navbar() {\r\n    const history = useHistory();\r\n\r\n    const isActiveRoute = (routeName: string) => {\r\n        return routeName === history.location.pathname;\r\n    }\r\n\r\n    const routes: Route[] = [\r\n        {\r\n            name: 'Home', \r\n            icon: <Home />, \r\n            isActive: isActiveRoute('/'), \r\n            path: '/',\r\n            disabled: false\r\n        },\r\n        {\r\n            name: 'Mint Search', \r\n            icon: <Search />, \r\n            isActive: isActiveRoute('/mintsearch'), \r\n            path: '/mintsearch',\r\n            disabled: true\r\n        },\r\n        {\r\n            name: 'Mass List', \r\n            icon: <Sell />, \r\n            isActive: isActiveRoute('/masslist'), \r\n            path: '/masslist',\r\n            disabled: true\r\n        },\r\n        {\r\n            name: 'Rush Games', \r\n            icon: <SportsEsports />, \r\n            isActive: isActiveRoute('/rushgames'), \r\n            path: '/rushgames',\r\n            disabled: true\r\n        },\r\n        {\r\n            name: 'Rush Team Builder', \r\n            icon: <Group />, \r\n            isActive: isActiveRoute('/rushteam'), \r\n            path: '/rushteam',\r\n            disabled: true\r\n        },\r\n        {\r\n            name: 'Account Transfer', \r\n            icon: <CompareArrows />, \r\n            isActive: isActiveRoute('/accounttransfer'), \r\n            path: '/accounttransfer',\r\n            disabled: false\r\n        },\r\n        {\r\n            name: 'Pack Opener', \r\n            icon: <Restaurant />, \r\n            isActive: isActiveRoute('/packopener'), \r\n            path: '/packopener',\r\n            disabled: true\r\n        }\r\n    ]\r\n\r\n    const handleNavButtonClick = (route: Route) => {\r\n        const from: any = history.location.state || { from: { pathname: '/' } };\r\n        history.replace(from);\r\n        history.push(route.path);\r\n    }\r\n\r\n    const handleMenuClick = (evt: MouseEvent<HTMLButtonElement>) => {\r\n        setMenuAnchor(evt.currentTarget);\r\n    }\r\n\r\n    const handleMenuClose = () => {\r\n        setMenuAnchor(null);\r\n    };\r\n\r\n    const [menuAnchor, setMenuAnchor] = useState<null | HTMLElement>(null);\r\n    const openMenu = Boolean(menuAnchor)\r\n\r\n    return(\r\n        <>\r\n            <BrowserView>\r\n                <Grid container spacing={1}>\r\n                    {routes.map((route: Route) => (\r\n                        <Grid item key={route.path}>\r\n                            <Button \r\n                                variant={route.isActive ? 'contained' : 'outlined'}\r\n                                disabled={route.disabled}\r\n                                onClick={() => handleNavButtonClick(route)}\r\n                            >\r\n                                {route.icon}&nbsp;\r\n                                {route.name}\r\n                            </Button>\r\n                        </Grid>\r\n                    ))}\r\n                </Grid>\r\n            </BrowserView>\r\n            <MobileView>\r\n                <AppBar position='static'>\r\n                    <Toolbar>\r\n                        <Typography variant=\"body1\" component=\"div\" sx={{ flexGrow: 1 }}>\r\n                            Menu\r\n                        </Typography>\r\n                        <IconButton \r\n                            color='primary'\r\n                            aria-controls=\"basic-menu\"\r\n                            aria-haspopup=\"true\"\r\n                            aria-expanded={openMenu ? 'true' : undefined}\r\n                            onClick={handleMenuClick}\r\n                        >\r\n                            <MenuIcon/>\r\n                        </IconButton>\r\n                        <Menu\r\n                            id='nav-menu'\r\n                            anchorEl={menuAnchor}\r\n                            open={openMenu}\r\n                            onClose={handleMenuClose}\r\n                        >\r\n                            {routes.map((route: Route) => (\r\n                                <MenuItem\r\n                                    key={route.path}\r\n                                    disabled={route.disabled}\r\n                                    onClick={() => handleNavButtonClick(route)}\r\n                                >\r\n                                    {route.icon}&nbsp;\r\n                                    {route.name}\r\n                                </MenuItem>\r\n                            ))}\r\n                        </Menu>\r\n                    </Toolbar>\r\n                </AppBar>\r\n            </MobileView>\r\n        </>\r\n    )\r\n}","import SpinnerOdds from \"./SpinnerOdds\";\r\nimport PackStock from \"./PackStock\";\r\nimport { Grid } from \"@mui/material\";\r\nimport Navbar from \"../Navigation/Navbar\";\r\n\r\n\r\nexport default function Home() {\r\n    return(\r\n        <Grid container spacing={2} p={2}>\r\n            <Grid item xs={12}>\r\n                <Navbar />\r\n            </Grid>\r\n            <Grid item lg={6} sm={12}>\r\n                <PackStock />\r\n            </Grid>\r\n            <Grid item lg={6} sm={12}>\r\n                <SpinnerOdds />\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}","import { Grid } from \"@mui/material\";\r\nimport Navbar from \"../Navigation/Navbar\";\r\n\r\nexport default function AccountTransfer() {\r\n    return(\r\n        <Grid container spacing={2} p={2}>\r\n            <Grid item xs={12}>\r\n                <Navbar />\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}","import './App.css';\r\nimport './index.css';\r\nimport Login from './Login/Login';\r\nimport Home from './Home/Home';\r\nimport {\r\n  HashRouter as Router,\r\n  Route,\r\n  Switch,\r\n  Redirect\r\n} from 'react-router-dom';\r\nimport { useContext, createContext, useState } from \"react\";\r\nimport { User } from './interfaces/User';\r\nimport AccountTransfer from './AccountTransfer/AccountTransfer';\r\n\r\ninterface Auth {\r\n  user: User\r\n  signin: (user: User) => void\r\n  signout: () => void\r\n}\r\n\r\nconst authContext = createContext({user: {} as User, signin: (user: User) => {}, signout: () => {}} as Auth);\r\n\r\nfunction ProvideAuth({ children }: any) {\r\n  const auth = useProvideAuth();\r\n  return (\r\n    <authContext.Provider value={auth}>\r\n      {children}\r\n    </authContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useAuth() {\r\n  return useContext(authContext);\r\n}\r\n\r\nfunction useProvideAuth() {\r\n  const [user, setUser] = useState({} as User);\r\n\r\n  const signin = (user: User) => {\r\n    setUser(user);\r\n  };\r\n\r\n  const signout = () => {\r\n    setUser({} as User);\r\n  };\r\n\r\n  return {\r\n    user,\r\n    signin,\r\n    signout\r\n  } as Auth;\r\n}\r\n\r\nfunction PrivateRoute({ children, ...rest }: any) {\r\n  let auth = useAuth();\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={({ location }) =>\r\n        auth.user.jwt ? (\r\n          children\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/login\",\r\n              state: { from: location }\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <ProvideAuth>\r\n      <Router>\r\n        <Switch>\r\n          <Route path='/login' exact render={() => <Login/>}/>\r\n          <PrivateRoute path='/accounttransfer'>\r\n            <AccountTransfer/>\r\n          </PrivateRoute>\r\n          <PrivateRoute path='/'>\r\n            <Home/>\r\n          </PrivateRoute>\r\n        </Switch>\r\n      </Router>\r\n    </ProvideAuth>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { createTheme } from '@mui/material';\r\n\r\nexport const theme = createTheme({\r\n  palette: {\r\n    mode: 'dark',\r\n    primary: {\r\n      main: '#2bc7c4',\r\n    },\r\n    secondary: {\r\n      main: '#f50057',\r\n    },\r\n  },\r\n});","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { ThemeProvider } from '@mui/system';\r\nimport { theme } from './theme';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ThemeProvider theme={theme}>\r\n      <App />\r\n    </ThemeProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}